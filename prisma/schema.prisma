// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  enabled  Boolean @default(false)
  role     ROLE    @default(USER)
}

enum ROLE {
  ADMIN
  USER
}

model Project {
  id             String   @id @default(uuid())
  name           String
  industry       String
  studio         String
  features       String[]
  devAmount      Int
  maxBudget      Float
  endDate        DateTime
  client         Client   @relation(fields: [clientId], references: [id])
  state          STATE    @default(TEAM_ASSIGNMENT)
  clientId       String
  pm             PM?       @relation(fields: [pmId], references: [id])
  pmId           String?   @unique
  devs           Developer[]
  underSelection UnderSelectionDeveloper[]
}

enum STATE {
  TEAM_ASSIGNMENT
  CANCELLED
  ACCEPTED
  DELAYED
  STARTED
}

model Client {
  id      String    @id @default(uuid())
  name    String
  Project Project[]
}

model Employee {
  id                        String  @id @default(uuid())
  name                      String
  salary                    Float
  availableDate             DateTime
  developer                 Developer?
  pm                        PM?
  underSelectionDeveloper   UnderSelectionDeveloper?
}

model PM {
  id            String  @id @default(uuid())
  employee      Employee  @relation(fields: [employeeId], references: [id])
  employeeId    String  @unique
  features      String[]
  project       Project?
}

model Developer {
  id            String  @id @default(uuid())
  employee      Employee  @relation(fields: [employeeId], references: [id])
  employeeId    String  @unique
  technologies  String[]
  project       Project? @relation(fields: [projectId], references: [id])
  projectId     String
}

model UnderSelectionDeveloper {
  id            String  @id @default(uuid())
  employee      Employee  @relation(fields: [employeeId], references: [id])
  employeeId    String  @unique
  selectionEnd  DateTime
  project       Project? @relation(fields: [projectId], references: [id])
  projectId     String
}